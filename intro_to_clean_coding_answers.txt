1. Clean code is code that is written in such a way that it is inherently readable and understandable, simple, and easy to maintain, usually designed using various principles and best practices in mind. Ideally, it is code that is not only understood by the author, but quickly understood by most other readers and is not overly complicated or bloated with redundancy and excessive comments.
2. Maybe not commonly used, but certainly life-critical and something many depend on, a poorly designed pacemaker (implanted computer to monitor and alter heart rhythms) has the potential to fail catastrophically. The pacemaker is unique because it is implanted in a patients chest and battery-operated - thus, it must be designed in  such a way to safely perform its desired function (monitor the heart and distribute electric currents as necessary), monitor its own battery-life, and, in the case of some newer pacemakers, interface with certain hardware at patient check-ups to ensure the pacemaker is functioning as intended. Usually, these pacemakers are implanted via surgery, and when the battery is low, a new one is implanted. A good example of a recent problem with pacemakers is from 2017, when the FDA mandated that some 500,000 pacemakers made by a certain company would need a firmware update, as they had been radio-enabled for interfacing, yet interfacing with the pacemaker was open - there was no authorization required, so it was found that anyone who wanted to and was within range of the pacemaker, could theoretically access the pacemaker and make changes, potentially maliciously or ignorantly (without physician guidance). Most of the affected patients had to visit their healthcare provider to receive the firmware update. (Source: https://www.theverge.com/2017/8/30/16230048/fda-abbott-pacemakers-firmware-update-cybersecurity-hack).

